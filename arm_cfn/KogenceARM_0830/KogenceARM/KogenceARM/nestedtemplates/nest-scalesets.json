{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "master-machineAdminUserName": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "master-machineAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on all VMs."
      }
    },
    "linuxOSVersion": {
      "type": "string"
    },
    "loadBalancerName": {
      "type": "string"
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "machineNicName": {
      "type": "string"
    },
    "subnetName": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    }
  },
  "variables": {
    "scriptFolder": "CustomScripts",
    "scriptServerFileName": "init_server.sh",
    "scriptNginxFileName": "install-nginx.sh",
    "vmSku": "Standard_D1_v2",
    "vmssName": "kg-vScaleSets",
    "instanceCount": 3,
    "osType": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "[parameters('linuxOSVersion')]",
      "version": "latest"
    },
    "imageReference": "[variables('osType')]",
    "ipConfigName": "[concat(variables('vmssName'), 'ipconfig')]",
    "network-interfaceVnetID": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "network-interfaceSubnetRef": "[concat(variables('network-interfaceVnetID'), '/subnets/', parameters('subnetName'))]",
    "machineStorageAccountContainerName": "blob-vmss"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('vmssName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-03-30",
      "dependsOn": [],
      "sku": {
        "name": "[variables('vmSku')]",
        "tier": "Standard",
        "capacity": "1"
      },
      "properties": {
        "overprovision": "false",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "osType": "Linux",
              "name": "vssOsDisk",
              "createOption": "FromImage",
              "caching": "ReadWrite",
              "vhdContainers": [
                "[concat(reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2016-01-01').primaryEndpoints.blob, variables('machineStorageAccountContainerName'))]"
              ]
            },
            "imageReference": "[variables('imageReference')]"
          },
          "osProfile": {
            "computerNamePrefix": "[variables('vmssName')]",
            "adminUsername": "[parameters('master-machineAdminUserName')]",
            "adminPassword": "[parameters('master-machineAdminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[parameters('machineNicName')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[variables('network-interfaceSubnetRef')]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat(resourceId(resourceGroup().name, 'Microsoft.Network/loadBalancers', parameters('loadBalancerName')),'/backendAddressPools/loadBalancerBackEnd')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[concat('https', '://', parameters('storageAccountName'), '.blob.core.windows.net', '/')]"
            }
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "init_server",
                "properties": {
                  "publisher": "Microsoft.OSTCExtensions",
                  "type": "CustomScriptForLinux",
                  "typeHandlerVersion": "1.4",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": [
                      "[concat(parameters('_artifactsLocation'), '/', variables('scriptFolder'), '/', variables('scriptNginxFileName'), parameters('_artifactsLocationSasToken'))]"
                    ],
                    "commandToExecute": "[concat('bash ', variables('scriptNginxFileName'))]"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Insights/autoscaleSettings",
      "apiVersion": "2015-04-01",
      "name": "kg-autoscalehost",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId(resourceGroup().name, 'Microsoft.Compute/virtualMachineScaleSets', variables('vmssName'))]"
      ],
      "properties": {
        "name": "kg-autoscalehost",
        "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]",
        "enabled": true,
        "profiles": [
          {
            "name": "Profile1",
            "capacity": {
              "minimum": "1",
              "maximum": "[variables('instanceCount')]",
              "default": "1"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "Percentage CPU",
                  "metricNamespace": "",
                  "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 60
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT1M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "Percentage CPU",
                  "metricNamespace": "",
                  "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('vmssName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 30
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT1M"
                }
              }
            ]
          }
        ]
      }
    }
  ],
  "outputs": {}
}